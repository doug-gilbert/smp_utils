.TH SMP_PHY_TEST "8" "August 2006" "smp_utils-0.91" SMP_UTILS
.SH NAME
smp_phy_test \- invoke PHY TEST FUNTION SMP function
.SH SYNOPSIS
.B smp_phy_test
[\fI--control=<n>\fR] [\fI--dwords=<n>\fR] [\fI--expected=<n>\fR]
[\fI--function=<n>\fR]  [\fI--help\fR] [\fI--hex\fR]
[\fI--interface=<params>\fR] [\fI--linkrate=<n>\fR] [\fI--pattern=<n>\fR]
[\fI--phy=<n>\fR] [\fI--raw\fR] [\fI--sa=<sas_addr>\fR] [\fI--verbose\fR]
[\fI--version\fR] \fI<smp_device>[,<n>]\fR
.SH DESCRIPTION
.\" Add any additional description here
.PP
Sends a SAS Management Protocol (SMP) PHY TEST FUNCTION request
to a SMP target. The SMP target is identified by the <smp_device>
and the <sas_addr>. Depending on the interface, the <sas_addr>
may be deduced from the <smp_device>. With one interface there is
one <smp_device> per machine so the '<smp_device>,<n>' syntax is
needed to differentiate between HBAs if there are multiple present.
.PP
The PHY TEST FUNCTION function can be used to start and stop
test pattern transmission. When a phy associated with a SMP
target (most likely an expander) starts test pattern transmission
then the attached phy (if there is one) sees a link down.
.PP
SAS phys associated with SSP targets (e.g. a SAS disk) can generate
similar test patterns by using the SEND DIAGNOSTIC SCSI command
with page code 3fh . See the sg_senddiag utility.
.TP
--control=<n> | -c <n>
set the 'phy test pattern dwords control' field. The argument <n>
can be from 0 to 255 inclusive, the default is 0 (each byte
in 'dwords' sent as data byte (Dxx.y) without scrambling). Only
active when 'pattern' is set to 40h (i.e. "two_dwords").
.TP
--dwords=<n> | -d <n>
set the 'phy test pattern dwords' field which is 8 bytes long.
The argument <n> would normally be entered in hex with a 
leading '0x' or a trailing 'h' (otherwise it would be interpreted
as decimal). Due to a quirk in the command line parser, the
argument value ffffffffffffffffh (i.e. all bits sets) needs to
be entered as '-1'.
.TP
--expected=<n> | -E <n>
set the 'expected expander change count' field in the SMP request.
The value <n> is from 0 to 65535 inclusive with 0 being the default
value. When <n> is greater than zero then if the value doesn't match
the expander change count of the SMP target (i.e. the expander) when
the request arrives then the target ignores the request and sets a
function result of "invalid expander change count" in the response.
.TP
--function=<n> | -f <n>
set the 'phy test function' field in the SMP request. Values between
0 and 255 are accepted with the default being 0. The value 0 stops
the selected phy performing a phy test function. The value 1 starts
the selected phy transmitting the test pattern (and anything that
the phy receives is discarded).
.TP
--help | -h
output the usage message then exit.
.TP
--hex | -H
output the response in hexadecimal.
.TP
--interface=<params> | -I <params>
interface specific parameters. In this case "interface" refers to the
path through the operating system to the SMP initiator. See the smp_utils
man page for more information.
.TP
--linkrate=<n> | -l <n>
transmits the test pattern at the specified physical link rate:
8 -> 1.5 Gbps, 9 -> 3 Gbps, 10 -> 6 Gbps. Default value is 9.
.TP
--pattern=<n> | -P <n>
specifies the type of test pattern to transmit. Permitted values are:
1 -> JTPAT, 2 -> CJTPAT, 40h -> "two_dwords".  Default value is 2.
.TP
--phy=<n> | -p <n>
phy identifier. This is a value between 0 and 127. Default is 0.
.TP
--raw | -r
send the response to stdout in binary. All error messages are sent to stderr.
.TP
--sa=<sas_addr> | -s <sas_addr>
specifies the SAS address of the SMP target device. Typically this is an
expander. This option may not be needed if the <smp_device> has the target's
SAS address within it. The <sas_addr> is in decimal but most SAS addresses
are shown in hexadecimal. To give a number in hexadecimal either prefix
it with '0x' or put a trailing 'h' on it.
.TP
--verbose | -v
increase the verbosity of the output. Can be used multiple times
.TP
--version | -V
print the version string and then exit.
.SH AUTHORS
Written by Douglas Gilbert.
.SH "REPORTING BUGS"
Report bugs to <dgilbert at interlog dot com>.
.SH COPYRIGHT
Copyright \(co 2006 Douglas Gilbert
.br
This software is distributed under a FreeBSD license. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.SH "SEE ALSO"
.B smp_utils, sg_senddiag(sg3_utils)
